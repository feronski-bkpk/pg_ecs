searchState.loadedDescShard("pg_ecs", 0, "Состав системы.\nПереход на следующий уровень. …\nReturns the argument unchanged.\nЭкран проигрыша для консоли с …\nСтартовый экран для консоли с …\nCalls <code>U::from(self)</code>.\nТочка входа в программу. Задаю …\nСоздаёт игру с нуля при запуске.\nПерезапуск игры. Полностью …\nДвижок запускает эту функцию на …\nЭкран победы для консоли с …\nСтруктура камеры.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКонструктор камеры.\nПозволяет камере следовать за …\nКомпонент “активация предмета…\nКомпонент “носимый” (для …\nКомпонент “преследование …\nКомпонент “урон” (очки урона).\nКомпонент “враг”.\nКомпонент “поле зрения” …\nКомпонент “здоровье” (текущее, …\nКомпонент “предмет”.\nКомпонент “имя” (имя).\nКомпонент “игрок” (уровень, на …\nКомпонент “портал”.\nКомпонент “предоставить карту…\nКомпонент “предоставить …\nКомпонент “предоставить …\nКомпонент “отрисовка” (цвет - …\nКомпонент “намерение атаковать…\nКомпонент “намерение …\nВспомогательная функция.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСо старта все плитки грязные.\nСтруктура карты.\nПеречисление типов плиток.\nОпределяет возможность …\nФункция определения границ …\nReturns the argument unchanged.\nReturns the argument unchanged.\nФункция создания вектора …\nФункция возвращения расстояния …\nФункция определения …\nОпределяет доступность плитки …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция определения …\nИндексирование карты (“row-first …\nКонструктор карты.\nОпределение инедкса плитки.\nФункция определения …\nТипаж архитектора карты.\nСостав строителя карты.\nТипаж тем карты.\nФункция создания границ для …\nФункция построения …\nФункция построения …\nФункция построения случайных …\nФункция построения случайных …\nФункция заполнения карты …\nФункция нахождения наибольшего …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nФункция создания нового …\nФункция создания монстров. Даёт …\nАрхитектор “Клеточный автомат…\nФункция подсчёта числа соседей.\nФункция нахождения стартовой …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nФункция прохождения по всем …\nФункция создания карты с …\nФункция создания карты шума.\nАрхитектор “Пьяная прогулка”.\nФункция логики “пьяницы”. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nФункция создания карты с …\nФункция согласования шаблона …\nАрхитектор “Комнаты”.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nФункция создания карты с …\nДизайнер “Подземелья”.\nДизайнер “Леса”.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция сборки темы дизайнера “…\nФункция сборки темы дизайнера “…\nФункция сопоставления плиток и …\nФункция сопоставления плиток и …\nImplement these for handling conversion to/from 2D …\nImplement these for handling conversion to/from 2D …\nImplements an Alpha-Only Lerp as an iterator\nAvailable device events\ndeepest black\nA BTerm context.\nProvides a builder mechanism for initializing BTerm. You …\nProvides a base abstract platform for BTerm to run on, …\nThe Backspace key, right over Enter.\nImplement this trait to support path-finding functions.\nLine-drawing iterator\nUse Bresenham’s rasterization algorithm for line …\nAn implementation of [Bresenham’s circle algorithm]. […\nA version of the Bresenham circle that does not make …\nNew type over <code>Bresenham</code> which include the <code>end</code> points when …\nCellular noise distance function to use\nWhat type of cellular noise result do you want\nA character was input\nUse Chebyshev distance (like Manhattan, but adds one to …\nThe window has requested that it be closed\nRepresents two colors together, a foreground and a …\nA command buffer used to queue mutable changes to the …\nThe “Compose” key on Linux.\nTrait that must be implemented by console types.\nThe mouse cursor entered the window\nThe mouse cursor left the window\nThe mouse cursor moved\nThe inner data representation fetched from the archetype. …\nConvenience type: you can define an angle in Degrees and …\nUse a diagonal distance, the max of the x and y distances\nRepresentation of a Dijkstra flow map. map is a vector of …\nA display console, used internally to provide console …\nEnumeration of available 2D Distance algorithms\nRepresents a batch of drawing commands, designed to be …\nRepresents a buffered drawing command that can be …\nAn opaque identifier for an entity.\nThe <code>EntityStore</code> trait abstracts access to entity data as …\nContains the error value\nContains the error value\nThe Escape key, next to F1.\nA type which holds onto a slice of entitiy data retrieved …\nEnumeration of available FOV algorithms\nA sparse console. Rather than storing every cell on the …\nInternal storage structure for sparse tiles.\nThe window gained or lost focus\nBTerm’s representation of a font or tileset file.\nFractal function to use\nImplement this trait on your state struct, so the engine …\nA type which defines a component group.\nRepresents an H/S/V triplet, in the range 0..1 (32-bit …\nAn HSV Lerp - transition from one HSV color to another in …\nError message type when failing to convert a hex code to …\nRepresents the current input state. The old key/mouse …\n<code>Insert</code>, next to Backspace.\nInterpolation function to use\nA type (typically a view) which can construct a query.\nDesribes a type which can convert itself into an SoA …\nAn unexpected character (not #, A-F) was detected in the …\nThe HTML string was not a valid length. (Expects #AABBCC)\nThe ‘0’ key over the ‘O’ and ‘P’ keys.\nThe ‘1’ key over the letters.\nThe ‘2’ key over the letters.\nThe ‘3’ key over the letters.\nThe ‘4’ key over the letters.\nThe ‘5’ key over the letters.\nThe ‘6’ key over the letters.\nThe ‘7’ key over the letters.\nThe ‘8’ key over the letters.\nThe ‘9’ key over the letters.\nA key on the keyboard was pressed or released.\nEnumeration of available 2D Distance algorithms\nUse Manhattan distance (distance up plus distance along)\nNo # was included in the string.\nMouse button is down\nMouse button is up\nA mouse button was pressed or released\nThe window was moved\nRepresents a sprite consisting of multiple glyphs/colors, …\nHolds the result of an A-Star navigation query. <code>destination</code>…\nType of noise to generate\nContains the success value\nContains the success value\nPause/Break key, next to Scroll lock.\nHelper struct defining a 2D point in space.\nHelper struct defining a 2D point in space.\nA 2D floating-point position.\nUse the Pythagoras algorithm for determining distance - …\nUs the Pythagoras algorithm for distance, but omitting the …\nRepresents an R/G/B triplet, in the range 0..1 (32-bit …\nRepresents an R/G/B triplet, in the range 0..1 (32-bit …\nConvenience type: you can define an angle in Radians and …\nReads a single entity data component type from a chunk.\nDefines a two-dimensional rectangle.\nDefines a rectangle with floating-point coordinates.\nA world (de)serializer which describes how to …\nInternal storage structure for sparse tiles.\nThe window was resized\nResources container. Shared resources stored here can be …\nThe Enter key.\nImplements an RGB Lerp as an iterator\nImplements an RGBA Lerp as an iterator\nThe window’s scale factor was changed. You generally don…\nA schedule of systems for execution.\nScroll Lock.\nA simple console with background color.\nA <code>Vec</code>-like container that can store a small number of …\nPrint Screen/SysRq.\nThe output entity source.\nThe space bar.\nA sparse console. Rather than storing every cell on the …\nInternal storage structure for sparse tiles.\nA sparse console. Rather than storing every cell on the …\nProvides access to a subset of the entities of a <code>World</code>.\nA low level builder for constructing systems.\ncolor 0xff00ff (hot pink) is regarded as transparent\nThe internal storage type for tiles in a simple console.\nReads a single entity data component type from a chunk.\nWrites a single entity data component type from a chunk.\nUse a vector approach to line solving.\nDefine a line using a fast 2D vector. It may not be as …\nSymbolic name for a keyboard key.\nA container of entities.\nDescribes configuration options for the creation of a new …\nWrites a single mutable entity data component type from a …\nStructure representing a character and its …\nStructure representing the components of one color\nStructure representing a REXPaint image file which is a …\nStructure representing a layer Cells are in the same order …\nThe alpha component (0..1), 0 is transparent, 1 is solid\nRequest an A-Star search. The start and end are specified …\nIndicates that the archetype is going to be provided to …\nCall this to enable the event queue. Otherwise, events …\nInsert all named W3C colors into the palette\nAdd a sprite to the current console\nAppends draw-calls to a batch to render a multi-tile …\nReturn the next point without checking if we are past <code>end</code>.\nReturn the next point without checking if we are past <code>end</code>.\nConstructs a filter which passes all entities.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nProduces the implementor as an Any that can be matched to …\nProduces the implementor as an Any that can be matched to …\nConstructs a serde::DeserializeSeed which will deserialize …\nConstructs a serde::DeserializeSeed which will deserialize …\nReturns a raw mutable pointer to the vector’s buffer.\nExtracts a mutable slice of the entire vector.\nReturns a raw pointer to the vector’s buffer.\nCreates a serde serializable representation of the world.\nExtracts a slice containing the entire vector.\nConverts an x/y coordinate to a console index number.\nTranslates x/y to an index entry. Not really useful.\nTranslate an x/y into an array index.\nTranslates x/y to an index entry. Not really useful.\nTranslates x/y to an index entry. Not really useful.\nTranslate an x/y into an array index.\nBlue component 0..255\nThe blue component (0..1)\nThe blue component (0..1)\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nSend a portion of the Virtual Console to a render batch, …\nBackground color\nThe background color\nSets this font file as the active texture\nBuilds the Dijkstra map: iterate from each starting point, …\nCombine all of the builder parameters, and return an BTerm …\nBuilds a system which is not <code>Schedulable</code>, as it is not …\nBuilds the Dijkstra map: iterate from each starting point, …\nCreates a new schedule builder.\nThe number of items the vector can hold without …\nContent of layer\nReturns the center of the rectangle\nReturns the center of the rectangle\nCharacter index This depends on the font but will usually …\nRemove all elements from the vector.\nRemoves all entities from the world.\nClears the global command buffer. This is called …\nEmpties the palette\nClones the entities from a world into this world.\nClones a single entity from the source world into the …\nClear the console.\nAdds a CLS (clear screen) to the drawing batch\nClear the screen.\nClears the screen.\nClear the screen.\nClear the screen.\nClears the screen.\nRequest that the active console clear itself to default …\nClear the console to a set background color, if supported.\nClear the screen. Since we don’t HAVE a background, it …\nClears the screen with a background color.\nClear the screen. Since we don’t HAVE a background, it …\nClear the screen. Since we don’t HAVE a background, it …\nClears the screen with a background color.\nRequest that the active console clear itself to a …\nAdds a CLS (clear screen) to the drawing batch\nConstructs a filter which requires that the entities have …\nReturns the raw component storage.\nCreate a new point from i32, this can be constant\nReturns <code>true</code> if type <code>T</code> exists in the store. Otherwise, …\nReturns <code>true</code> if the world contains an entity with the …\nRemoves consecutive duplicate elements.\nRemoves consecutive duplicate elements using the given …\nRemoves consecutive elements that map to the same key.\nApplies a lengthier desaturate (via HSV) to the color\nApplies a lengthier desaturate (via HSV) to the color\nRetrieve the map’s dimensions. Made optional to reduce …\nDimensions\nProvides a 2D distance between points, using the specified …\nProvides a 3D distance between points, using the specified …\nCreates a draining iterator that removes the specified …\nDraws a horizontal progress bar\nDraws a horizontal progress bar.\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal bar, suitable for health-bars or …\nDraws a vertical progress bar\nDraws a vertical progress bar.\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical bar, suitable for health-bars or progress …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a filled box, with single line characters.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a filled box, with double line characters.\nDraws a box, starting at x/y with the extents width/height …\nDraws a double-lined box, starting at x/y with the extents …\nDraws a double-lined box, starting at x/y with the extents …\nDraw a single-lined box without filling in the middle\nDraws a box, starting at x/y with the extents width/height …\nDraws a non-filled (hollow) box, starting at x/y with the …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a single-line box, without filling in the center.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a double-line box, without filling in the contents.\nDraws a non-filled (hollow) box, starting at x/y with the …\nDraws a non-filled (hollow) double-lined box, starting at …\nDraws a non-filled (hollow) double-lined box, starting at …\nDeclare an embedded resource.\nGets an entry for an entity, allowing manipulation of the …\nReturns a mutable entity entry which can be used to access …\nReturns an entity entry which can be used to access entity …\nExecutes all of the steps in the schedule.\nExecutes all of the steps in the schedule, with …\nAppends a collection of entities to the world. Returns the …\nCopy elements from a slice and append them to the vector.\nForeground color\nThe foreground color\nCalculates field-of-view for a map that supports …\nCalculates field-of-view for a map that supports …\nFills a rectangle-defined region with a given glyph\nFills a region with a glyph/color combination.\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a target region with the specified color/glyph combo.\nFills a region with a glyph/color combination.\nTries to find a slice of components, if this fetch …\nTries to find a mutable slice of components, if this fetch …\nCalls a function for each x/y point in the rectangle\nProvides a for_each function for all messages in the queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …\nConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …\nConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …\nCreates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.\nConstructs a new HSV color, from 3 32-bit floats\nConstructs a new RGB color, from 3 32-bit floats in the …\nConstructs a new RGB color, from 3 32-bit floats in the …\nConstructs from an HTML color code (e.g. “#eeffee”)\nConstructs from an HTML color code (e.g. “#eeffeeff”)\nCreates a <code>SmallVec</code> directly from the raw components of …\nHelper to read from an BTerm resource\nCopy the elements from a slice into a new <code>SmallVec</code>.\nGenerates a sprite from an input string, divided into …\nGenerates a sprite from an input string, divided into …\nCreates a new virtual console from a blob of text. Useful …\nCreate a point from a tuple of two i32s\nCreate a point from an x/y/z tuple\nConstructs a new RGB color, from 3 bytes in the range …\nConstructs a new RGB color, from 3 bytes in the range …\nConstruct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.\nCreates a point from an <code>UltraViolet</code> vec2\nImport a sprite from an XP Rex Paint file.\nGreen component 0..255\nThe green components (0..1)\nThe green component (0..1)\nGet the cell at coordinates (x,y), or None if it is out of …\nRetrieve an immutable reference to  <code>T</code> from the store if it …\nReturn a vector of tile indices to which one can path from …\nGets the dimensions of the console in characters\nGets the active console’s size, in characters.\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns a component storage accessor for component types …\nGet mutable reference to the cell at coordinates (x,y), or …\nRetrieve a mutable reference to  <code>T</code> from the store if it …\nAttempts to retrieve a mutable reference to <code>T</code> from the …\nAttempts to retrieve a mutable reference to <code>T</code> from the …\nAttempts to retrieve a mutable reference to <code>T</code> from the …\nAttempts to retrieve an immutable reference to <code>T</code> from the …\nAttempts to retrieve an immutable reference to <code>T</code> from the …\nAttempts to retrieve an immutable reference to <code>T</code> from the …\nReturn the distance you would like to use for …\nGet underlying RNG implementation for use in traits / …\nGet the scale &amp; center of the console. Returns (scale, …\nGets the active scale for the current layer\nGets the current scale factor\nA vector of component groups to provide layout hints for …\nRe-allocate to set the capacity to …\nHue (range 0..1)\nReturns the rectangle’s height\nReturns the rectangle’s height\nHeight of layer (in cells)\nReturns the world’s unique ID.\nReturns the world’s unique ID.\nReturns true if an x/y coordinate is within the console …\nConvert an array index to a point. Defaults to an index …\nConvert an array index to a point.\nInitializes the console.\nInitializes a console, ready to add to BTerm’s console …\nInitializes the console.\nInitializes the console.\nInitializes an OpenGL context and a window, stores the …\nQuick initialization for when you just want an 8x16 VGA …\nQuick initialization for when you just want an 8x8 font …\nThe maximum number of elements this vector can hold inline\nInsert an element at position <code>index</code>, shifting all elements …\nInserts the instance of <code>T</code> into the store. If the type …\nCopy elements from a slice into the vector at position …\nInsert multiple elements at position <code>index</code>, shifting all …\nReturns true if this overlaps with other\nReturns true if this overlaps with other\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …\nConverts the fetch into the retrieved component slices\nConvert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …\nConverts this into an SoA component source.\nConvert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …\nConverts the schedule into a vector of steps.\nReturns <code>true</code> if the vector is empty\nReturns <code>true</code> if the world contains no entities.\nChecks to see if a key is pressed. True if it is, false …\nChecks to see if a mouse button is pressed. 0 = left, 1 = …\nTrue is you cannot see through the tile, false otherwise. …\nChecks to see if a key is pressed by scancode. True if it …\nReturn whether this color is considered transparent (if …\nHashSet of pressed keyboard scan codes\nLayers of the image\nReturns the <code>n_steps</code> component of the iterator\nThe number of elements stored in the vector\nReturns the number of entities in the world.\nProgress smoothly between two colors, in the HSV color …\nLerps by a specified percentage (from 0 to 1) between this …\nLerps by a specified percentage (from 0 to 1) between this …\nLerps only the alpha channel, by a specified percentage …\nFor A-Z menus, translates the keys A through Z into 0..25\nPlots a line between two 2D points and returns a vector of …\nUses a Bresenham’s algorithm to plot a line between two …\nUses a 2D vector algorithm to plot a line between two …\nLink an embedded resource, making it available to …\nLoads a font file (texture) to obtain the width and height …\nRuns the BTerm application, calling into the provided …\nConstructs a filter which requires that the component …\nPerforms merging of two resource storages, which occurs …\nHashSet of pressed mouse buttons\nReturn the current mouse position in pixels.\nApplies the current physical mouse position to the active …\nApplies the current physical mouse position to the active …\nReturns the current mouse position (0,0 if there isn’t …\nReturns the current mouse position (0,0 if there isn’t …\nMerges the given world into this world by moving all …\nConstruct an RGB color from a tuple of u8, or a named …\nConstruct an RGB color from a tuple of u8, or a named …\nCreates a new noise instance, using simplex noise defaults.\nCreates a new circle, using the Bresenham Circle algorithm.\nCreates a Bresenham Circle without allowing diagonal gaps.\nCreates a new RGB lerp iterator. The iterator smoothly …\nConstruct a new Dijkstra map, ready to run. You must …\nCreates a new <code>HsvLerp</code> iterator.\nCreates a new RGB iterator\nCreates a new iterator.Yields intermediate points between …\nConstruct a new XpLayer of width by height. The contents …\nCreates a new RGB iterator\nCreates a new RNG from a randomly generated seed\nConstruct a new XpFile with one layer of width by height. …\nCreates a new iterator. Yields points <code>start..=end</code>.\nConstruct a new color from r,g,b values\nDefine a vector line between two points.\nConstruct an empty vector\nMakes a new (empty) NavigationPath\nObtain a new, empty draw batch\nCreates a new angle in degrees.\nCreates a new angle in radians.\nCreate a new point from an x/y coordinate.\nCreate a new point from an x/y/z coordinate.\nCreates a new virtual console of arbitrary dimensions.\nCreates a new <code>ColorPair</code>, from two given colors.\nConstructs a new, zeroed (black) HSV triplet.\nConstructs a new, zeroed (black) RGB triplet.\nConstructs a new, zeroed (black) RGB triplet.\nProvides a new, unconfigured, starting point for an BTerm …\nCreates an unloaded texture with filename and size …\nConstructs a new registry.\nCreate a new system builder to construct a new system.\nCreates a new world with the given options,\nCreates an empty Dijkstra map node.\nConstruct a new Dijkstra map, ready to run. You must …\nReturns the next step in the iterator\nReturns the next Lerp step\nReturns the next step in the iterator\nReturns the next step in the iterator\nReturns the RNG’s next unsigned-64 type\nSets the behavior to use when a component type is unknown.\nPacks the world’s internal component storage to optimise …\nRetrieve a palette color by name from the global registry. …\nConstructs a filter which performs a no-op and defers to …\nConvert a Point (x/y) to an array index. Defaults to an …\nConvert a Point (x/y) to an array index. Defaults to a Z, …\nReturns true if a point is inside the rectangle\nReturns true if a point is inside the rectangle\nGets a set of all tiles in the rectangle\nRemove an item from the end of the vector and return it, …\nPop a single event from the event queue. Returns None if …\nPrint a string at the specified x/y coordinate.\nPrints text in the default colors at a given location\nPrints a string to an x/y position.\nPrints a string at x/y.\nPrints a string to an x/y position.\nPrints a string to an x/y position.\nPrints a string at x/y.\nPrint a string to the active console.\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints centered text, centered across the whole line\nPrints text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrint a string in color at the specified x/y coordinate, …\nPrints text in the default colors at a given location\nPrints a string to an x/y position, with foreground and …\nPrints a string at x/y, with foreground and background …\nPrints a string to an x/y position, with foreground and …\nPrints a string to an x/y position, with foreground and …\nPrints a string at x/y, with foreground and background …\nPrint a string to the active console, in color.\nPrints text in color, centered to the whole console width, …\nPrints text, centered to the whole console width, at …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints centered text, centered across the whole line - in …\nPrints colored text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints colored text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints colored text right-aligned\nPrints right aligned text\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints right-aligned text, in color\nPrints right aligned text with render order\nPrints text in the default colors at a given location &amp; …\nPrints text right-aligned\nPrints right aligned text\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints right-aligned text\nPrints right aligned text with render order\nSend a portion of the Virtual Console to a physical …\nPrints text in the default colors at a given location &amp; …\nPrint a colorized string with the color encoding defined …\nPrints formatted text, using the doryen_rs convention. For …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrints formatted text, using the doryen_rs convention. For …\nFrom a given start point, project forward radius units at …\nAppend an item to the vector.\nAppends a new entity to the world. Returns the ID of the …\nAppends a named entity to the word, replacing any existing …\nQueries provide efficient iteration and filtering of …\nConstructs a query.\nTells the game to quit\nRed component 0..255\nThe red component (0..1)\nThe red component (0..1)\nReturns a random value of whatever type you specify\nReturns a random entry in a slice (or none if empty)\nReturns a random index into a slice\nReturns a random value in the specified range, of type …\nRead a xp image from a stream\nRead a RGB color from a <code>ReadBytesExt</code>\nThis performs a soft resource block on the component for …\nFlag this resource type as being read by this system.\nRegisters a component type and its key with the registry.\nRegisters a component type and its key with the registry.\nRegisters a new console terminal for output, and returns …\nRegisters a new console terminal for output, and returns …\nRegisters a new console terminal for output, and returns …\nRegister a palette color by name with the global registry.\nRegisters a new Sprite-based console\nRegister a sprite sheet (OpenGL - native or WASM - only)\nRemove and return the element at position <code>index</code>, shifting …\nRemoves the type <code>T</code> from this store if it exists.\nRemoves the specified entity from the world. Returns <code>true</code> …\nDirectly renders a sprite to an BTerm context.\nSubmits the current batch to the BTerm buffer and empties …\nRender a REX Paint …\nReserve capacity for <code>additional</code> more elements to be …\nReserve the minimum capacity for <code>additional</code> more elements …\nResizes the vector so that its length is equal to <code>len</code>.\nResizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRolls dice based on a DiceType struct, including …\nRolls dice, using the classic 3d6 type of format: n is the …\nRolls dice based on passing in a string, such as roll_str(…\nSaturation (range 0..1)\nHashSet of pressed keyboard scan codes\nTake a screenshot - Native only\nCreates a new noise instance, using simplex noise defaults …\nCreates a new RNG from a specific seed\nSerde (de)serialization of worlds.\nSets a single cell to a color/glyph combination.\nSets an individual cell glyph\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSet a single tile located at x/y to the specified …\nutility uniform functions\nSets the currently active console number.\nChange the active font for the layer. DO NOT USE WITH …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nApply fg/bg alpha channel values to all cells in the …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nApply an alpha channel value to all cells’ backgrounds …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nApply an alpha channel value to all cells’ foregrounds …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets a single cell’s background color.\nSets an individual cell glyph\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets the background color only of a specified tile.\nSets an individual cell glyph with specified render order\nSets the character size of the layer. Be really careful …\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nManually override the character size for the current …\nManually override the character size for the current …\nPermits the creation of an arbitrary clipping rectangle. It…\nSets a clipping rectangle for the current console\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPushes a fancy terminal character\nSet a tile with “fancy” additional attributes\nSets the length of a vector.\nSpecify a global offset (by character count, so 0.5 is …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets the active offset for the current layer\nSpecify a scale and center of the console. A scale above …\nSets the active scale for the current layer\nRe-seeds the noise system with a new seed.\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode on a console\nSets an individual cell glyph with a specified ordering …\nLoad a font, and allocate it as an OpenGL resource. …\nShrink the capacity of the vector as much as possible.\nProvides an 8x8 terminal font simple console, with the …\nProvides an 80x50 console in the baked-in 8x8 terminal …\nCreates a <code>SmallVec</code> containing the arguments.\nReturns <code>true</code> if the data has spilled into a separate …\nSplits the world into two. The left world allows access …\nSplits the world into two. The left world allows access …\nA “packed archetype” storage model.\nConverts a string into a vector of u8, CP437 …\nSubmits a batch to the global drawing buffer, and empties …\nSubscribes to entity events.\nRemove the element at position <code>index</code>, replacing it with …\nCreates an accessor to resources which are Send and Sync, …\nWraps a function in a system, and generates a new function …\nAutomatic query scheduling and parallel execution.\nSets the target console for rendering\nConverts a unicode character to a CP437 equivalent, …\nApplies a quick grayscale conversion to the color\nApplies a quick grayscale conversion to the color\nCreates a group definition.\nConverts an RGB triple to an HSV triple.\nHelper for map index conversion\nConverts an HSV triple to an RGB triple\nConverts to an RGB, dropping the alpha component\nConverts to an RGBA value with a specified alpha level\nConverts an RGB to an RGBA\nConverts the point to an i32 tuple\nConverts the point to a usize tuple\nConverts the point to an UltraViolet vec2\nConverts into an UltraViolet Vec3\nSaves the entire console stack to a REX Paint XP file. If …\nSerializes the console layer to an XpFile\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nExports the current layer to a REX Paint file\nShorten the vector, keeping the first <code>len</code> elements and …\nTry to use a coordinate: return Some(the coordinate) if it …\nRe-allocate to set the capacity to …\nReserve capacity for <code>additional</code> more elements to be …\nReserve the minimum capacity for <code>additional</code> more elements …\nactivate the shader\nValue (range 0..1)\nTries to find the component slice version of a component, …\nVersion number from header\nProvides a VGA-font simple terminal with the specified …\nProvides an 80x50 terminal, in the VGA font as your …\nReturns the rectangle’s width\nReturns the rectangle’s width\nWidth of layer (in cells)\nEnables input event queue\nEnable resize changing console size, rather than scaling. …\nConstruct an empty vector with enough capacity …\nAdds width/height dimensions to the BTerm builder.\nCreate a new rectangle, specifying exact dimensions\nCreate a new rectangle, specifying exact dimensions\nAdds a fancy (supporting per-glyph offsets, rotation, …\nEnables you to auto adjust the window to fit the screen.\nAdds a font registration to the BTerm builder.\nAdds a font registration to the BTerm builder.\nInstructs the back-end (not all of them honor it; WASM and …\nEnables you to override the full screen setting for native …\nRequest a pixel gutter around the rendered area. The …\nProvides a name to the system being built.\nPush platform-specific initialization hints to the …\nEnable scanlines post-processing effect.\nDefines a query to provide this system for its execution. …\nAdds a resource path to the BTerm builder. You only need …\nAdds a simple console, hard-coded to the baked-in 8x8 …\nAdds a simple console layer to the BTerm builder.\nAdds a simple console layer to the BTerm builder, with no …\nCreate a new rectangle, specifying X/Y Width/Height\nCreate a new rectangle, specifying X/Y Width/Height\nAdds a sparse console layer to the BTerm builder.\nAdds a sparse console with no bg rendering layer to the …\nAdds a sprite console\nRegister a sprite sheet\nOverrides the default assumption for tile sizes. Needed …\nAdds a window title to the BTerm builder.\nEnables you to override the vsync default for native …\nWorlds store collections of entities. An entity is a …\nWrite a xp image to a stream\nWrite a RGB color to a <code>WriteBytesExt</code>\nThis performs a exclusive resource block on the component …\nFlag this resource type as being written by this system.\nThe point’s X location\nThe 3D point’s X location\nThe X position of the first point (typically the left)\nThe X position of the first point (typically the left)\nThe X position of the second point (typically the right)\nThe X position of the second point (typically the right)\nApplies an XpFile to a given console, with 0,0 offset by …\nApplies an XpFile to a given draw batch, with 0,0 offset …\nThe point’s Y location\nThe 3D point’s Y location\nThe Y position of the first point (typically the top)\nThe Y position of the first point (typically the top)\nThe Y position of the second point (typically the bottom)\nThe Y position of the second point (typically the bottom)\nThe 3D point’s Z location\nCreate a zero point\nCreates a zero rectangle\nCreates a zero rectangle\nTrait that must be implemented by console types.\nThe internal storage type for tiles in a simple console.\nProduces the implementor as an Any that can be matched to …\nProduces the implementor as an Any that can be matched to …\nConverts an x/y coordinate to a console index number.\nClear the console.\nClear the console to a set background color, if supported.\nDraws a horizontal progress bar.\nDraws a vertical progress bar.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nFills a rectangle-defined region with a given glyph\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the dimensions of the console in characters\nReturns the current arbitrary clipping rectangle, None if …\nGet the scale &amp; center of the console. Returns (scale, …\nReturns true if an x/y coordinate is within the console …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrint a string at the specified x/y coordinate.\nPrints text, centered to the whole console width, at …\nPrints text, centered on an arbitrary point\nPrint a string in color at the specified x/y coordinate, …\nPrints text in color, centered to the whole console width, …\nPrints colored text, centered on an arbitrary point\nPrints colored text right-aligned\nPrints text right-aligned\nPrint a colorized string with the color encoding defined …\nSets a single cell to a color/glyph combination.\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets a single cell’s background color.\nSets the character size of the layer. Be really careful …\nPermits the creation of an arbitrary clipping rectangle. It…\nSpecify a global offset (by character count, so 0.5 is …\nSpecify a scale and center of the console. A scale above …\nSets the character translation mode\nSerializes the console layer to an XpFile\nTry to use a coordinate: return Some(the coordinate) if it …\nA filter which requires all filters within <code>T</code> match.\nA filter which always matches <code>true</code>.\nAn iterator which yields entity chunks from a query.\nProvides access to slices of components for entities which …\nA filter which performs course-grained change detection.\nA filter which matches <code>true</code> when the given component …\nThe inner data representation fetched from the archetype. …\nDeclares the default filter type used by a view when it is …\nThe filter has not made a decision, defer to other filters.\nThe dynamic filter type.\nA filter which selects based upon the data available in …\nThe type of component references returned.\nA combination of a LayoutFilter and a DynamicFilter.\nA type which holds onto a slice of entitiy data retrieved …\nThe fetch type yielded for each archetype.\nThe filter constructed.\nIndicates if an an archetype should be accepted or …\nAllows a filter to determine if component optimization …\nA type (typically a view) which can construct a query.\nAn entity chunk iterator which internally locks its filter …\nThe iterator type which pulls entity data out of a world.\nThe layout filter type.\nA filter which selects based upon which component types …\nThe filter has made a decision, <code>true</code> for accept, <code>false</code> for …\nA filter which negates <code>F</code>.\nA filter which requires any filter within <code>T</code> match.\nA parallel entity chunk iterator.\nA filter which always defers.\nProvides efficient means to iterate and filter entities in …\nReads a single entity data component type from a chunk.\nContains the type IDs read by the view.\nA filter which matches <code>true</code> if the entity has the given …\nReads a single entity data component type from a chunk.\nWrites a single entity data component type from a chunk.\nA type which can pull entitiy data out of a world.\nWrites a single mutable entity data component type from a …\nContains the type IDs written by the view.\nIndicates that the archetype is going to be provided to …\nConstructs a filter which passes all entities.\nReturns the archetype that all entities in the chunk …\nReturns <code>true</code> if the filter may potentially match a group.\nCombines the result with a logical and operator.\nCombines the result with a logical or operator.\nConstructs a filter which requires that the entities have …\nReturns a slice of components.\nReturns a mutable slice of components.\nCreates an iterator which will yield slices of entity data …\nAdds an additional filter to the query.\nReturns a tuple of the layout and dynamic filters.\nTries to find a slice of components, if this fetch …\nTries to find a mutable slice of components, if this fetch …\nIterates through all components which match the query.\nIterates through all entity chunks which match the query.\nIterates through all entity chunks which match the query.\nIterates through all entity chunks which match the query.\nIterates through all components which match the query.\nIterates through all components which match the query.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the components for a single entity.\nConverts the chunk into a tuple of it’s inner slices.\nReturns the components for a single entity.\nReturns the components for a single entity.\nReturns the components that are requried to be present in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the fetch into the retrieved component slices\nConverts the chunk into a tuple of it’s inner slices.\nConverts the chunk into an iterator which yields tuples of …\nReturns <code>true</code> if the archetype should be accepted.\nReturns an iterator which will yield all components which …\nReturns an iterator which will yield all entity chunks …\nReturns an iterator which will yield all entity chunks …\nReturns an iterator which will yield all entity chunks …\nReturns an iterator which will yield all components which …\nReturns an iterator which will yield all components which …\nReturns a reference to the layout filter.\nCalculates the filter’s result for the given archetype …\nCalculates the filter’s result for the given entity …\nConstructs a filter which requires that the component …\nConsructs a new Query\nIterates in parallel through all components which match …\nIterates in parallel through all entity chunks which match …\nIterates in parallel through all entity chunks which match …\nIterates in parallel through all entity chunks which match …\nIterates in parallel through all components which match …\nIterates in parallel through all components which match …\nReturns a parallel iterator which will yield all …\nReturns a parallel iterator which will yield all entity …\nReturns a parallel iterator which will yield all entity …\nReturns a parallel iterator which will yield all entity …\nReturns a parallel iterator which will yield all …\nReturns a parallel iterator which will yield all …\nConstructs a filter which performs a no-op and defers to …\nPrepares the filter to run.\nConstructs a query.\nReturns <code>true</code> if the view reads the specified data type.\nReturns the component types read by the view.\nReturns a permissions struct declaring the component …\nDetermines if this view type is valid. Panics if checks …\nReturns <code>true</code> if the given component access includes all …\nTries to find the component slice version of a component, …\nReturns <code>true</code> if the view writes to the specified data type.\nReturns the component types written to by the view.\nStructure representing a character and its …\nStructure representing the components of one color\nStructure representing a REXPaint image file which is a …\nStructure representing a layer Cells are in the same order …\nBlue component 0..255\nBackground color\nContent of layer\nCharacter index This depends on the font but will usually …\nForeground color\nGreen component 0..255\nHeight of layer (in cells)\nLayers of the image\nRed component 0..255\nVersion number from header\nWidth of layer (in cells)\nApplies an XpFile to a given console, with 0,0 offset by …\nApplies an XpFile to a given draw batch, with 0,0 offset …\nA TypeKey which can construct itself for a given type T.\nContains the canon names of entities.\nWraps a WorldDeserializer and a world and implements …\nWraps a WorldDeserializer and a universe and implements …\nA 16 byte UUID which uniquely identifies an entity.\nDescribes how to serialize and deserialize a runtime <code>Entity</code>…\nAbort (de)serialization wwith an error.\nIgnore the component.\nA world (de)serializer which describes how to …\nA serializable representation of a world.\nThe stable type ID used to identify each component type in …\nThe stable type ID used to identify each component type in …\nA (de)serializable type which can represent a component …\nAn error type describing what to do when a component type …\nDescribes a type which knows how to deserialize the …\nDescribes a type which knows how to deserialize the …\nCanonizes the given entity and name pair.\nCanonizes a given Entity ID and returns the associated …\nCanonizes a given EntityName and returns the associated …\nDeserializes an <code>Entity</code>.\nDeserializes a single component and returns it as a boxed …\nDeserializes a slice of components and inserts them into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the Entity ID associated with the given EntityName.\nReturns the EntityName associated with the given Entity ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a runtime component type ID into the serialized …\nConstructs the type key for component type <code>T</code>.\nAdds the specified component to the given entity layout.\nSerializes an <code>Entity</code> by constructing the serializable …\nSerializes a single component.\nSerializes a slice of components.\nConverts the serialized type ID into a runtime component …\nCalls <code>callback</code> with the Entity ID serializer\nCalls <code>callback</code> with the Entity ID serializer\nAn archetype is a collection of entities which all have …\nThe index of an archetype in a world.\nDefines a type which can describe the layout of an …\nProvides access to writers for writing new entities into …\nA marker trait for all types which can be attached to an …\nThe index of a component within an archetype.\nContains information about the type of a component.\nAn accessor for a shared slice reference of components for …\nAn accessor for a mutable slice reference of components …\nDescribes a type which can write entity components into a …\nA storage location for component data slices. Each …\nA unique ID for a component type.\nA hasher optimized for hashing component type IDs.\nProvides the ability to append new components to the …\nContains the storages for all component types in a world.\nPrepend a new type into a cons list\ntransform cons list into a flat tuple\nDescribes the component types which are attached to an …\nA world epoch. Epochs are incremented each time a world is …\nA filter which finds existing archetypes which match the …\nDescribes the components in a component group.\nA type which defines a component group.\nConverts a type into a ComponentSource.\nDesribes a type which can convert itself into an SoA …\nAn iterator of shared archetype slice references.\nAn iterator of mutable archetype slice references.\nProvides mutable access to multiple different component …\nResult of append\nFlattened tuple\nDescribes how to perform a component pack operation.\nStores a slice of components of type <code>T</code> for each archetype. …\nAn index of archetype layouts used to accelerate query …\nThe output component source.\nThe output entity source.\nThe storage type required to hold all instances of this …\nA hasher optimized for hashing types that are represented …\nA storage location for component data slices. Each …\nProvides the ability to append new components to the …\nThe version of a component slice. Versions are incremented …\nAdds a new component to the end of the group.\nReturns the alignment of the component.\nPrepend to runtime cons value\nReturns the archetype being written to.\nClaims exclusive access to a component storage.\nClaims a component storage for a given component.\nClaims a component storage for a given component.\nClaims exclusive access to a component storage.\nReturns a slice of component type IDs for the components …\nReturns a boxed object from a boxed trait object if the …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nDrops the component.\nReturns the component metadata.\nEnsures that the given spare capacity is available for …\nEnsures that the given spare capacity is available in the …\nEnsures that the given spare capacity is available in the …\nReturns a slice of entity IDs for all entities which …\nCopies new components into the specified archetype slice.\nWrites the given components into the component storage.\nWrites new components into the given archetype’s …\nWrites the given components into the component storage.\nReturns the archetype source’s filter.\nFlatten runtime cons value\nForce a repack.\nA heuristic estimating cache misses for an iteration …\nThe estimated number of cache misses due to fragmentation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new component group from a vector of …\nGets the component slice for the specified archetype.\nReturns the storage for the given component type.\nReturns the storage for the given component type.\nReturns the storage for the given component type.\nReturns a writer for writing to multiple component …\nGets a mutable component slice for the specified archetype.\nReturns the storage for the given component type.\nReturns a pointer to the given archetype’s component …\nGets or inserts the storage for the given component type.\nReturns a pointer to the given archetype’s component …\nReturns <code>true</code> if the layout contains the given component …\nReturns <code>true</code> if the layout contains the given component …\nNotifies the storage of the start of a new epoch.\nReturns the index of the archetype.\nInserts a new empty component slice for an archetype into …\nReturns a slice of entities inserted by this writer, and …\nConverts this structure into a component source.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this slice into its inner value.\nConverts this slice into its inner value. This increments …\nConverts this into an SoA component source.\nReturns true if the trait object wraps an object of type …\nReturns <code>true</code> if the storage contains no archetypes.\nIterates through all archetype component slices.\nIterates through all mutable archetype component slices.\nConstructs a new entity layout.\nReturns the layout of the archetype, describing which …\nReturns the number of archetype slices stored.\nThe target maximum number of entities to move during a …\nMoves all of the components from the given storage …\nMoves a component from one archetype to another.\nMoves a single component from the given storage location …\nConstructs a new archetype writer.\nConstructs a new entity layout.\nConstructs a new component group.\nConstructs the component type ID for the given component …\nReturns the component meta of component type <code>T</code>.\nPacks archetype slices.\nRepacks all component storages.\nPushes an entity ID into the archetype.\nWrites components for new entities into an archetype.\nAdds a new component to the layout.\nAdds a new component to the layout.\nReserves capacity for at least <code>additional</code> extra entity IDs …\nReturns an iterator over archetype indexes for archetypes …\nReturns an iterator over archetype indexes for archetypes …\nReturns the size of the component.\nThe number of frames that an archetype has to remain …\nRemoves a component from an archetype slice, swapping it …\nCreates a group definition.\nMoves an archetype’s component slice to a new storage.\nMoves a component to a new storage.\nMoves a component to a new storage.\nReturns the internal TypeID of the component.\nA factory for <code>Schedule</code>.\nA command buffer used to queue mutable changes to the …\nExecutes a sequence of systems, potentially in parallel, …\nErgonomic wrapper type which contains a <code>Ref</code> type.\nFlush system command buffers.\nA <code>Runnable</code> which is also <code>Send</code> and <code>Sync</code>.\nProvides an abstraction across tuples of queries for …\nBlanket trait for resource types.\nTrait which is implemented for tuples of resources and …\nUnique ID for a resource.\nResources container. Shared resources stored here can be …\nThe resource reference returned during a fetch.\nTrait describing a schedulable type. This is implemented …\nA schedule of systems for execution.\nA step in a schedule.\nA resource collection which is <code>Send</code> and <code>Sync</code>, but which …\nThe concrete type which contains the system closure …\nStructure describing the resource and component access …\nA low level builder for constructing systems.\nA function which can provide the body of a system.\nA diagnostic identifier for a system.\nA batch of systems.\nA thread local function.\nA thread local system\nA container for resources which performs runtime borrow …\nThis trait can be used to implement custom world writer …\nGets the set of archetypes the system will access when run,\nQueues the addition of a component from an entity in the …\nAdds a system to the schedule.\nAdds a thread local system to the schedule. This system …\nAdds a thread local function to the schedule. This …\nFinalizes the builder into a <code>Schedule</code>.\nGets the system’s command buffer.\nReturns a boxed object from a boxed trait object if the …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nExecutes an arbitrary closure against the mutable world, …\nExecutes all systems and then flushes their command …\nQueues the insertion of new entities into the world.\nFetches all defined resources.\nFetches all defined resources.\nFetches all defined resources, without checking mutability.\nEvaluates the queries and records which archetypes they …\nFlushes this command buffer, draining all stored commands …\nWaits for executing systems to complete, and the flushes …\nFlushes the recorded command buffers for all systems.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve an immutable reference to  <code>T</code> from the store if it …\nRetrieve a mutable reference to  <code>T</code> from the store if it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this executor into a vector of its component …\nReturns true if the trait object wraps an object of type …\nReturns true if this <code>CommandBuffer</code> is currently empty and …\nReturns the current number of commands already queued in …\nGets the name of the system.\nConstructs an empty command buffer.\nConstructs a new executor for all systems to be run in a …\nReturns the resource type ID of the given resource type.\nPrepares the system for execution against a world.\nQueues the insertion of a single entity into the world.\nGets the resources and component types read by the system.\nQueues the deletion of an entity in the command buffer.\nQueues the removal of a component from an entity in the …\nRuns the system body.\nRuns the system.\nExecutes all systems, potentially in parallel.\nRuns the system.\nGets the ID of the world this command buffer belongs to.\nDestructs the writer and performs the write operations on …\nGets the resources and component types written by the …\nAttempted to access an entity which lies outside of the …\nAll archetypes.\nAll component types are allowed.\nAn iterator which yields new entity IDs.\nSome component types are allowed.\nDescribes which archetypes are available for access.\nA new archetype has been created.\nReplace references to entities which have been cloned with …\nDescribes which components are available for access.\nAn error type which describes why an attempt to retrieve a …\nThe world does not allow access to the component.\nSome component types are disallowed.\nA merger which clones entities from the source world into …\nAn opaque identifier for an entity.\nError type representing a failure to access entity data.\nA hasher optimized for entity IDs.\nAn entity has been inserted into an archetype.\nThe storage location of an entity’s data.\nAttempted to access an entity which does not exist.\nAn entity has been removed from an archetype.\nDescribes how a merger wishes <code>Entity</code> references inside …\nThe <code>EntityStore</code> trait abstracts access to entity data as …\nProvides safe read and write access to an entity’s …\nProvides safe read and write access to an entity’s …\nProvides safe read-only access to an entity’s components.\nEvents emitted by a world to subscribers. See …\nDescribes a type which can send entity events.\nReplace IDs according to the given map.\nA map of entity IDs to their storage locations.\nDescribes how to merge two worlds.\nThe component was not found on the entity.\nDescribes read and write access to resources.\nSome archetypes.\nProvides access to the archetypes and entity components …\nProvides access to a subset of the entities of a <code>World</code>.\nA container of entities.\nUnique identifier for a world.\nDescribes configuration options for the creation of a new …\nAdds all of the permissions contained in the given set to …\nAdds a new component to the entity. If the component …\nReturns <code>truw</code> if the given component is accessible for …\nReturns <code>truw</code> if the given component is accessible for …\nReturns the entity’s archetype.\nReturns the entity’s archetype.\nReturns the entity’s archetype.\nReturns the entity’s archetype index.\nReturns the archetypes.\nReturns the ID to use in the destination world when …\nReturns a bitset of allowed archetype indexes if this …\nReturns <code>true</code> if the given archetype is accessable from …\nReturns the entity’s component index within its …\nReturns the component storage.\nReturns <code>true</code> if the location map contains the given entity.\nCalculates the destination entity layout for the given …\nIndicates how the merger wishes entity IDs to be adjusted …\nReturns a mutable entity entry which can be used to access …\nReturns an entity entry which can be used to access entity …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the location of an entity.\nReturns a reference to one of the entity’s components.\nReturns a reference to one of the entity’s components.\nReturns a reference to one of the entity’s components.\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns a component storage accessor for component types …\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns the group the given component belongs to.\nReturns group definitions.\nA vector of component groups to provide layout hints for …\nReturns the world’s unique ID.\nReturns the world ID.\nInserts an collection of adjacent entities into the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a reference to one of the entity’s components.\nReturns a reference to one of the entity’s components.\nReturns a reference to one of the entity’s components.\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nReturns a mutable reference to one of the entity’s …\nDetermines if the given archetypes are disjoint from those …\nReturns <code>true</code> if none of the permissions in the given set …\nReturns <code>true</code> if the location map is empty.\nReturns <code>true</code> if all of the permissions in the given set …\nReturns the archetype layout index.\nReturns the number of entities in the map.\nReturns the entity’s location.\nReturns the entity’s location.\nReturns the entity’s location.\nMerges an archetype from the source world into the …\nConstructs a new enity ID allocator iterator.\nConstructs a new entity location.\nConstructs a new empty permissions set.\nCreates a new duplicate merger.\nConstructs a new SubWorld.\nIndicates if the merger prefers to merge into a new empty …\nAdds a resource to the permissions set as both readable …\nAdds a resource to the permissions set as readable.\nAdds a resource to the permissions set as writable.\nGets a slice of resources which are afforded read access.\nGets a slice of resources which are afforded read access …\nGets a slice of resources which are afforded both read and …\nAllows the merger to clone the given component into the …\nAllows the merger to clone the given component into the …\nAllows the merger to clone the given component into the …\nAllows the merger to copy the given component into the …\nRemoves an entity from the location map.\nRemoves a resource from the permissions set.\nRemoves a component from the entity. Does nothing if the …\nRemoves read access to a resource from the permissions set.\nRemoves write access to a resource from the permissions …\nSends the given event to all listeners. Returns <code>true</code> if …\nInserts or updates the location of an entity.\nSplits the world into two. The left world allows access …\nSplits the world into two. The left world allows access …\nSubtracts all of the permissions contained in the given …\nGets a slice of resources which are afforded write access.\nGets a slice of resources which are afforded write access …\nThe type name of the component.\nThe type name of the component.\nThe type ID of the component.\nThe type ID of the component.\nФункция создания уровня.\nФункция создания игрока.\nФункция создания портала.\nПеречисление типов сущностей.\nСостав сущностей в файле template.\nСостав файла template.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция загрузки файла template.\nФункция создания сущностей …\nФункция создания конкретной …\nПланировщик функций состояния …\nПланировщик функций состояния …\nПланировщик функций состояния …\nСистема “преследование”. Если …\nСистема “бой”. Обрабатывает …\nСистема “конец хода”. Она …\nСистема “отрисовка сущностей”…\nСистема “поле зрения”. …\nСистема “вспомогательный …\nСистема “отрисовка карты”. …\nСистема “передвижения”. …\nСистема “фильтр передвижения”…\nСистема “пользовательский ввод…\nСистема “использование …\nПеречисление игровых состояний.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")