searchState.loadedDescShard("bracket_terminal", 0, "Contains the error value\nContains the success value\nDeclare an embedded resource.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLink an embedded resource, making it available to …\nTrait that must be implemented by console types.\nThe internal storage type for tiles in a simple console.\nProduces the implementor as an Any that can be matched to …\nProduces the implementor as an Any that can be matched to …\nConverts an x/y coordinate to a console index number.\nClear the console.\nClear the console to a set background color, if supported.\nDraws a horizontal progress bar.\nDraws a vertical progress bar.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nFills a rectangle-defined region with a given glyph\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the dimensions of the console in characters\nReturns the current arbitrary clipping rectangle, None if …\nGet the scale &amp; center of the console. Returns (scale, …\nReturns true if an x/y coordinate is within the console …\nReturns true if an x/y coordinate is within the console …\nReturns true if an x/y coordinate is within the console …\nReturns true if an x/y coordinate is within the console …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrint a string at the specified x/y coordinate.\nPrints text, centered to the whole console width, at …\nPrints text, centered on an arbitrary point\nPrint a string in color at the specified x/y coordinate, …\nPrints text in color, centered to the whole console width, …\nPrints colored text, centered on an arbitrary point\nPrints colored text right-aligned\nPrints text right-aligned\nPrint a colorized string with the color encoding defined …\nSets a single cell to a color/glyph combination.\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets a single cell’s background color.\nSets the character size of the layer. Be really careful …\nPermits the creation of an arbitrary clipping rectangle. It…\nSpecify a global offset (by character count, so 0.5 is …\nSpecify a scale and center of the console. A scale above …\nSets the character translation mode\nSerializes the console layer to an XpFile\nTry to use a coordinate: return Some(the coordinate) if it …\nTry to use a coordinate: return Some(the coordinate) if it …\nTry to use a coordinate: return Some(the coordinate) if it …\nTry to use a coordinate: return Some(the coordinate) if it …\nImplements an Alpha-Only Lerp as an iterator\nAvailable device events\nA BTerm context.\nProvides a builder mechanism for initializing BTerm. You …\nProvides a base abstract platform for BTerm to run on, …\nThe Backspace key, right over Enter.\nLine-drawing iterator\nUse Bresenham’s rasterization algorithm for line …\nAn implementation of [Bresenham’s circle algorithm]. […\nA version of the Bresenham circle that does not make …\nNew type over <code>Bresenham</code> which include the <code>end</code> points when …\nA character was input\nUse Chebyshev distance (like Manhattan, but adds one to …\nThe window has requested that it be closed\nRepresents two colors together, a foreground and a …\nThe “Compose” key on Linux.\nTrait that must be implemented by console types.\nThe mouse cursor entered the window\nThe mouse cursor left the window\nThe mouse cursor moved\nConvenience type: you can define an angle in Degrees and …\nUse a diagonal distance, the max of the x and y distances\nA display console, used internally to provide console …\nEnumeration of available 2D Distance algorithms\nRepresents a batch of drawing commands, designed to be …\nRepresents a buffered drawing command that can be …\nContains the error value\nThe Escape key, next to F1.\nA sparse console. Rather than storing every cell on the …\nInternal storage structure for sparse tiles.\nThe window gained or lost focus\nBTerm’s representation of a font or tileset file.\nImplement this trait on your state struct, so the engine …\nRepresents an H/S/V triplet, in the range 0..1 (32-bit …\nAn HSV Lerp - transition from one HSV color to another in …\nError message type when failing to convert a hex code to …\nRepresents the current input state. The old key/mouse …\n<code>Insert</code>, next to Backspace.\nAn unexpected character (not #, A-F) was detected in the …\nThe HTML string was not a valid length. (Expects #AABBCC)\nThe ‘0’ key over the ‘O’ and ‘P’ keys.\nThe ‘1’ key over the letters.\nThe ‘2’ key over the letters.\nThe ‘3’ key over the letters.\nThe ‘4’ key over the letters.\nThe ‘5’ key over the letters.\nThe ‘6’ key over the letters.\nThe ‘7’ key over the letters.\nThe ‘8’ key over the letters.\nThe ‘9’ key over the letters.\nA key on the keyboard was pressed or released.\nEnumeration of available 2D Distance algorithms\nUse Manhattan distance (distance up plus distance along)\nNo # was included in the string.\nMouse button is down\nMouse button is up\nA mouse button was pressed or released\nThe window was moved\nRepresents a sprite consisting of multiple glyphs/colors, …\nContains the success value\nPause/Break key, next to Scroll lock.\nHelper struct defining a 2D point in space.\nHelper struct defining a 2D point in space.\nA 2D floating-point position.\nUse the Pythagoras algorithm for determining distance - …\nUs the Pythagoras algorithm for distance, but omitting the …\nRepresents an R/G/B triplet, in the range 0..1 (32-bit …\nRepresents an R/G/B triplet, in the range 0..1 (32-bit …\nConvenience type: you can define an angle in Radians and …\nDefines a two-dimensional rectangle.\nDefines a rectangle with floating-point coordinates.\nInternal storage structure for sparse tiles.\nThe window was resized\nThe Enter key.\nImplements an RGB Lerp as an iterator\nImplements an RGBA Lerp as an iterator\nThe window’s scale factor was changed. You generally don…\nScroll Lock.\nA simple console with background color.\nPrint Screen/SysRq.\nThe space bar.\nA sparse console. Rather than storing every cell on the …\nInternal storage structure for sparse tiles.\nA sparse console. Rather than storing every cell on the …\nThe internal storage type for tiles in a simple console.\nUse a vector approach to line solving.\nDefine a line using a fast 2D vector. It may not be as …\nSymbolic name for a keyboard key.\nThe alpha component (0..1), 0 is transparent, 1 is solid\nCall this to enable the event queue. Otherwise, events …\nInsert all named W3C colors into the palette\nAdd a sprite to the current console\nAppends draw-calls to a batch to render a multi-tile …\nReturn the next point without checking if we are past <code>end</code>.\nReturn the next point without checking if we are past <code>end</code>.\nProduces the implementor as an Any that can be matched to …\nProduces the implementor as an Any that can be matched to …\nConverts an x/y coordinate to a console index number.\nTranslates x/y to an index entry. Not really useful.\nTranslate an x/y into an array index.\nTranslates x/y to an index entry. Not really useful.\nTranslates x/y to an index entry. Not really useful.\nTranslate an x/y into an array index.\nThe blue component (0..1)\nThe blue component (0..1)\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nDraw a horizontal progress bar\nSend a portion of the Virtual Console to a render batch, …\nThe background color\nSets this font file as the active texture\nCombine all of the builder parameters, and return an BTerm …\nReturns the center of the rectangle\nReturns the center of the rectangle\nClears the global command buffer. This is called …\nEmpties the palette\nClear the console.\nAdds a CLS (clear screen) to the drawing batch\nClear the screen.\nClears the screen.\nClear the screen.\nClear the screen.\nClears the screen.\nRequest that the active console clear itself to default …\nClear the console to a set background color, if supported.\nClear the screen. Since we don’t HAVE a background, it …\nClears the screen with a background color.\nClear the screen. Since we don’t HAVE a background, it …\nClear the screen. Since we don’t HAVE a background, it …\nClears the screen with a background color.\nRequest that the active console clear itself to a …\nAdds a CLS (clear screen) to the drawing batch\nCreate a new point from i32, this can be constant\nApplies a lengthier desaturate (via HSV) to the color\nApplies a lengthier desaturate (via HSV) to the color\nProvides a 2D distance between points, using the specified …\nProvides a 3D distance between points, using the specified …\nDraws a horizontal progress bar\nDraws a horizontal progress bar.\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal progress bar\nDraws a horizontal bar, suitable for health-bars or …\nDraws a vertical progress bar\nDraws a vertical progress bar.\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical progress bar\nDraws a vertical bar, suitable for health-bars or progress …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a filled box, with single line characters.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a filled box, with double line characters.\nDraws a box, starting at x/y with the extents width/height …\nDraws a double-lined box, starting at x/y with the extents …\nDraws a double-lined box, starting at x/y with the extents …\nDraw a single-lined box without filling in the middle\nDraws a box, starting at x/y with the extents width/height …\nDraws a non-filled (hollow) box, starting at x/y with the …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a single-line box, without filling in the center.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a double-line box, without filling in the contents.\nDraws a non-filled (hollow) box, starting at x/y with the …\nDraws a non-filled (hollow) double-lined box, starting at …\nDraws a non-filled (hollow) double-lined box, starting at …\nDeclare an embedded resource.\nThe foreground color\nFills a rectangle-defined region with a given glyph\nFills a region with a glyph/color combination.\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a rectangle with the specified rendering information\nFills a target region with the specified color/glyph combo.\nFills a region with a glyph/color combination.\nCalls a function for each x/y point in the rectangle\nProvides a for_each function for all messages in the queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new HSV color, from 3 32-bit floats\nConstructs a new RGB color, from 3 32-bit floats in the …\nConstructs a new RGB color, from 3 32-bit floats in the …\nConstructs from an HTML color code (e.g. “#eeffee”)\nConstructs from an HTML color code (e.g. “#eeffeeff”)\nGenerates a sprite from an input string, divided into …\nGenerates a sprite from an input string, divided into …\nCreates a new virtual console from a blob of text. Useful …\nCreate a point from a tuple of two i32s\nCreate a point from an x/y/z tuple\nConstructs a new RGB color, from 3 bytes in the range …\nConstructs a new RGB color, from 3 bytes in the range …\nCreates a point from an <code>UltraViolet</code> vec2\nImport a sprite from an XP Rex Paint file.\nThe green components (0..1)\nThe green component (0..1)\nGets the dimensions of the console in characters\nGets the active console’s size, in characters.\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nReturns the current arbitrary clipping rectangle, None if …\nGet the scale &amp; center of the console. Returns (scale, …\nGets the active scale for the current layer\nGets the current scale factor\nHue (range 0..1)\nReturns the rectangle’s height\nReturns the rectangle’s height\nInitializes the console.\nInitializes a console, ready to add to BTerm’s console …\nInitializes the console.\nInitializes the console.\nInitializes an OpenGL context and a window, stores the …\nQuick initialization for when you just want an 8x16 VGA …\nQuick initialization for when you just want an 8x8 font …\nReturns true if this overlaps with other\nReturns true if this overlaps with other\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks to see if a key is pressed. True if it is, false …\nChecks to see if a mouse button is pressed. 0 = left, 1 = …\nChecks to see if a key is pressed by scancode. True if it …\nHashSet of pressed keyboard scan codes\nReturns the <code>n_steps</code> component of the iterator\nProgress smoothly between two colors, in the HSV color …\nLerps by a specified percentage (from 0 to 1) between this …\nLerps by a specified percentage (from 0 to 1) between this …\nLerps only the alpha channel, by a specified percentage …\nFor A-Z menus, translates the keys A through Z into 0..25\nPlots a line between two 2D points and returns a vector of …\nUses a Bresenham’s algorithm to plot a line between two …\nUses a 2D vector algorithm to plot a line between two …\nLink an embedded resource, making it available to …\nLoads a font file (texture) to obtain the width and height …\nRuns the BTerm application, calling into the provided …\nHashSet of pressed mouse buttons\nReturn the current mouse position in pixels.\nApplies the current physical mouse position to the active …\nApplies the current physical mouse position to the active …\nReturns the current mouse position (0,0 if there isn’t …\nReturns the current mouse position (0,0 if there isn’t …\nConstruct an RGB color from a tuple of u8, or a named …\nConstruct an RGB color from a tuple of u8, or a named …\nCreates a new circle, using the Bresenham Circle algorithm.\nCreates a Bresenham Circle without allowing diagonal gaps.\nCreates a new RGB lerp iterator. The iterator smoothly …\nCreates a new <code>HsvLerp</code> iterator.\nCreates a new RGB iterator\nCreates a new iterator.Yields intermediate points between …\nCreates a new RGB iterator\nCreates a new iterator. Yields points <code>start..=end</code>.\nDefine a vector line between two points.\nObtain a new, empty draw batch\nCreates a new angle in degrees.\nCreates a new angle in radians.\nCreate a new point from an x/y coordinate.\nCreate a new point from an x/y/z coordinate.\nCreates a new virtual console of arbitrary dimensions.\nCreates a new <code>ColorPair</code>, from two given colors.\nConstructs a new, zeroed (black) HSV triplet.\nConstructs a new, zeroed (black) RGB triplet.\nConstructs a new, zeroed (black) RGB triplet.\nProvides a new, unconfigured, starting point for an BTerm …\nCreates an unloaded texture with filename and size …\nReturns the next step in the iterator\nReturns the next Lerp step\nReturns the next step in the iterator\nReturns the next step in the iterator\nRetrieve a palette color by name from the global registry. …\nReturns true if a point is inside the rectangle\nReturns true if a point is inside the rectangle\nGets a set of all tiles in the rectangle\nPop a single event from the event queue. Returns None if …\nPrint a string at the specified x/y coordinate.\nPrints text in the default colors at a given location\nPrints a string to an x/y position.\nPrints a string at x/y.\nPrints a string to an x/y position.\nPrints a string to an x/y position.\nPrints a string at x/y.\nPrint a string to the active console.\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints centered text, centered across the whole line\nPrints text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrint a string in color at the specified x/y coordinate, …\nPrints text in the default colors at a given location\nPrints a string to an x/y position, with foreground and …\nPrints a string at x/y, with foreground and background …\nPrints a string to an x/y position, with foreground and …\nPrints a string to an x/y position, with foreground and …\nPrints a string at x/y, with foreground and background …\nPrint a string to the active console, in color.\nPrints text in color, centered to the whole console width, …\nPrints text, centered to the whole console width, at …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints centered text, centered across the whole line - in …\nPrints colored text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints text in color, centered to the whole console width, …\nPrints colored text, centered on an arbitrary point\nPrints text, centered to the whole console width, at …\nPrints text, centered to the whole console width, at …\nPrints colored text right-aligned\nPrints right aligned text\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints colored text right-aligned\nPrints right-aligned text, in color\nPrints right aligned text with render order\nPrints text in the default colors at a given location &amp; …\nPrints text right-aligned\nPrints right aligned text\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints text right-aligned\nPrints right-aligned text\nPrints right aligned text with render order\nSend a portion of the Virtual Console to a physical …\nPrints text in the default colors at a given location &amp; …\nPrint a colorized string with the color encoding defined …\nPrints formatted text, using the doryen_rs convention. For …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrint a colorized string with the color encoding defined …\nPrints formatted text, using the doryen_rs convention. For …\nFrom a given start point, project forward radius units at …\nTells the game to quit\nThe red component (0..1)\nThe red component (0..1)\nRegisters a new console terminal for output, and returns …\nRegisters a new console terminal for output, and returns …\nRegisters a new console terminal for output, and returns …\nRegister a palette color by name with the global registry.\nRegisters a new Sprite-based console\nRegister a sprite sheet (OpenGL - native or WASM - only)\nDirectly renders a sprite to an BTerm context.\nSubmits the current batch to the BTerm buffer and empties …\nRender a REX Paint …\nSaturation (range 0..1)\nHashSet of pressed keyboard scan codes\nTake a screenshot - Native only\nSets a single cell to a color/glyph combination.\nSets an individual cell glyph\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSets a single cell in the console\nSet a single tile located at x/y to the specified …\nutility uniform functions\nSets the currently active console number.\nChange the active font for the layer. DO NOT USE WITH …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nApply fg/bg alpha channel values to all cells in the …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nApply an alpha channel value to all cells’ backgrounds …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nApply an alpha channel value to all cells’ foregrounds …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets a single cell’s background color.\nSets an individual cell glyph\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets a single cell in the console’s background\nSets the background color only of a specified tile.\nSets an individual cell glyph with specified render order\nSets the character size of the layer. Be really careful …\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nSets the character size of the terminal\nManually override the character size for the current …\nManually override the character size for the current …\nPermits the creation of an arbitrary clipping rectangle. It…\nSets a clipping rectangle for the current console\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPermits the creation of an arbitrary clipping rectangle. It…\nPushes a fancy terminal character\nSet a tile with “fancy” additional attributes\nSpecify a global offset (by character count, so 0.5 is …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets an offset to total console rendering, useful for …\nSets the active offset for the current layer\nSpecify a scale and center of the console. A scale above …\nSets the active scale for the current layer\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode\nSets the character translation mode on a console\nSets an individual cell glyph with a specified ordering …\nLoad a font, and allocate it as an OpenGL resource. …\nProvides an 8x8 terminal font simple console, with the …\nProvides an 80x50 console in the baked-in 8x8 terminal …\nConverts a string into a vector of u8, CP437 …\nSubmits a batch to the global drawing buffer, and empties …\nSets the target console for rendering\nConverts a unicode character to a CP437 equivalent, …\nApplies a quick grayscale conversion to the color\nApplies a quick grayscale conversion to the color\nConverts an RGB triple to an HSV triple.\nHelper for map index conversion\nConverts an HSV triple to an RGB triple\nConverts to an RGB, dropping the alpha component\nConverts to an RGBA value with a specified alpha level\nConverts an RGB to an RGBA\nConverts the point to an i32 tuple\nConverts the point to a usize tuple\nConverts the point to an UltraViolet vec2\nConverts into an UltraViolet Vec3\nSaves the entire console stack to a REX Paint XP file. If …\nSerializes the console layer to an XpFile\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nSaves the layer to an XpFile structure\nExports the current layer to a REX Paint file\nactivate the shader\nValue (range 0..1)\nProvides a VGA-font simple terminal with the specified …\nProvides an 80x50 terminal, in the VGA font as your …\nReturns the rectangle’s width\nReturns the rectangle’s width\nEnables input event queue\nEnable resize changing console size, rather than scaling. …\nAdds width/height dimensions to the BTerm builder.\nCreate a new rectangle, specifying exact dimensions\nCreate a new rectangle, specifying exact dimensions\nAdds a fancy (supporting per-glyph offsets, rotation, …\nEnables you to auto adjust the window to fit the screen.\nAdds a font registration to the BTerm builder.\nAdds a font registration to the BTerm builder.\nInstructs the back-end (not all of them honor it; WASM and …\nEnables you to override the full screen setting for native …\nRequest a pixel gutter around the rendered area. The …\nPush platform-specific initialization hints to the …\nEnable scanlines post-processing effect.\nAdds a resource path to the BTerm builder. You only need …\nAdds a simple console, hard-coded to the baked-in 8x8 …\nAdds a simple console layer to the BTerm builder.\nAdds a simple console layer to the BTerm builder, with no …\nCreate a new rectangle, specifying X/Y Width/Height\nCreate a new rectangle, specifying X/Y Width/Height\nAdds a sparse console layer to the BTerm builder.\nAdds a sparse console with no bg rendering layer to the …\nAdds a sprite console\nRegister a sprite sheet\nOverrides the default assumption for tile sizes. Needed …\nAdds a window title to the BTerm builder.\nEnables you to override the vsync default for native …\nThe point’s X location\nThe 3D point’s X location\nThe X position of the first point (typically the left)\nThe X position of the first point (typically the left)\nThe X position of the second point (typically the right)\nThe X position of the second point (typically the right)\nThe point’s Y location\nThe 3D point’s Y location\nThe Y position of the first point (typically the top)\nThe Y position of the first point (typically the top)\nThe Y position of the second point (typically the bottom)\nThe Y position of the second point (typically the bottom)\nThe 3D point’s Z location\nCreate a zero point\nCreates a zero rectangle\nCreates a zero rectangle\nTrait that must be implemented by console types.\nThe internal storage type for tiles in a simple console.\nProduces the implementor as an Any that can be matched to …\nProduces the implementor as an Any that can be matched to …\nConverts an x/y coordinate to a console index number.\nClear the console.\nClear the console to a set background color, if supported.\nDraws a horizontal progress bar.\nDraws a vertical progress bar.\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nDraws a box, starting at x/y with the extents width/height …\nFills a rectangle-defined region with a given glyph\nGets the dimensions of the console in characters\nReturns the current arbitrary clipping rectangle, None if …\nGet the scale &amp; center of the console. Returns (scale, …\nPrint a string at the specified x/y coordinate.\nPrints text, centered to the whole console width, at …\nPrints text, centered on an arbitrary point\nPrint a string in color at the specified x/y coordinate, …\nPrints text in color, centered to the whole console width, …\nPrints colored text, centered on an arbitrary point\nPrints colored text right-aligned\nPrints text right-aligned\nPrint a colorized string with the color encoding defined …\nSets a single cell to a color/glyph combination.\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets ALL tiles background alpha (only tiles that exist, in …\nSets ALL tiles foreground alpha (only tiles that exist, in …\nSets a single cell’s background color.\nSets the character size of the layer. Be really careful …\nPermits the creation of an arbitrary clipping rectangle. It…\nSpecify a global offset (by character count, so 0.5 is …\nSpecify a scale and center of the console. A scale above …\nSets the character translation mode\nSerializes the console layer to an XpFile\ndeepest black\ncolor 0xff00ff (hot pink) is regarded as transparent\nStructure representing a character and its …\nStructure representing the components of one color\nStructure representing a REXPaint image file which is a …\nStructure representing a layer Cells are in the same order …\nBlue component 0..255\nBackground color\nContent of layer\nCharacter index This depends on the font but will usually …\nForeground color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHelper to read from an BTerm resource\nGreen component 0..255\nGet the cell at coordinates (x,y), or None if it is out of …\nGet mutable reference to the cell at coordinates (x,y), or …\nHeight of layer (in cells)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn whether this color is considered transparent (if …\nLayers of the image\nConstruct a new XpLayer of width by height. The contents …\nConstruct a new XpFile with one layer of width by height. …\nConstruct a new color from r,g,b values\nRed component 0..255\nRead a xp image from a stream\nRead a RGB color from a <code>ReadBytesExt</code>\nVersion number from header\nWidth of layer (in cells)\nWrite a xp image to a stream\nWrite a RGB color to a <code>WriteBytesExt</code>\nApplies an XpFile to a given console, with 0,0 offset by …\nApplies an XpFile to a given draw batch, with 0,0 offset …")